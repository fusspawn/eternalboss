{"ts":1350765917029,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function Renderer(canvas_id, client_object) \n{\n    this.main_canvas = document.getElementById(canvas_id);\n    this.main_canvas_context = this.main_canvas.getContext(\"2d\");\n    this.client = client_object;\n    \n    this.screen_width = this.main_canvas.width;\n    this.screen_height = this.main_canvas.height;\n    this.rendered_bb = {x:0, y:0, width:0, height: 0};\n    \n    this.background_color = \"black\";\n    \n    this.stats = {};\n    this.stats.buffer_blits = 0;\n    this.stats.buffers_created = 0;\n    this.stats.culled = 0;\n    this.main_camera = null;\n    \n    client_data.debug_text = true;\n    client_data.debug_shapes = true;\n    client_data.gui.__renderer = client_data.gui.addFolder(\"Rendering\");\n    client_data.gui.__renderer.add(client_data,'debug_text');\n    client_data.gui.__renderer.add(client_data,'debug_shapes');\n    \n    client_data.gui.__renderer.add(this.stats, 'buffer_blits').listen();\n    client_data.gui.__renderer.add(this.stats, 'buffers_created').listen();\n    client_data.gui.__renderer.add(this.stats, 'culled').listen();\n    \n    this.draw_frame = function(delta) {};\n    \n    this.clear = function(only_dirty) \n    {\n        this.stats.buffer_blits = 0;\n        this.stats.culled =0;\n        if(only_dirty) {\n            this.main_canvas_context.fillRect(this.rendered_bb.x, this.rendered_bb.y, \n                  this.rendered_bb.width, this.rendered_bb.height);\n        } else {\n            this.main_canvas_context.save();\n            this.main_canvas_context.fillStyle = this.background_color;\n            this.main_canvas_context.fillRect(0,0, this.screen_width, this.screen_height);   \n            this.main_canvas_context.restore();\n        }\n    };\n    \n    this.create_canvas_buffer = function(image_url, callback, context) {\n            this.stats.buffers_created++;\n            var rend = this;\n            this.client.resources.get_image(image_url, function(image) {\n                var ccontext = rend.__create_context(image.width, image.height);\n                ccontext.drawImage(image, 0, 0);\n                callback.call(context, ccontext);\n            }, {});\n    };\n    \n    this.__create_context = function(width, height) {\n        var tmp_canvas = document.createElement(\"canvas\");\n        tmp_canvas.width = width;\n        tmp_canvas.height = height;\n        return tmp_canvas.getContext(\"2d\");\n    };\n    \n    this.__calc_redraw_bb = function(drawn_context, x, y) {\n    };\n    \n    this.draw_buffer = function(buffer, x, y, width, height) { \n        if(buffer == null || buffer.canvas == null) {\n            return;\n        }\n        \n        if(this.main_camera != null) {\n            x = x + this.main_camera.x;\n            y = y + this.main_camera.y;\n        }\n        \n        if(this.should_cull(x, y, width, height)) {\n            return; \n        }\n\n        this.main_canvas_context.drawImage(buffer.canvas, x, y);\n        this.stats.buffer_blits++;\n    };\n    \n    this.draw_buffer_section = function(buffer, srcx, srcy, srcwidth, srcheight, x, y, width, height) {\n        if(buffer == null || buffer.canvas == null) {\n            return;\n        }\n        \n        if(this.main_camera != null) {\n            x = x + this.main_camera.x;\n            y = y + this.main_camera.y;\n        }\n        \n        \n        if(this.should_cull(x, y, width, height)) {\n            return; \n        }\n        \n        \n        this.main_canvas_context.drawImage(buffer.canvas, srcx, srcy, srcwidth, srcheight, x, y, width, height);\n        this.stats.buffer_blits++;\n    }; \n    \n    this.draw_debug_box = function(x, y, width, height, color) {\n        if(!client_data.debug_shapes)\n            return;\n        \n        if(this.main_camera != null) {\n            x = x + this.main_camera.x;\n            y = y + this.main_camera.y;\n        }\n        if(this.should_cull(x, y, width, height))\n            return; \n        \n        this.main_canvas_context.save();\n        this.main_canvas_context.strokeStyle = color;    \n        this.main_canvas_context.strokeRect(x, y, width, height);\n        this.main_canvas_context.restore();\n    };    \n    \n    this.draw_debug_text = function(x, y, text, color) {\n        if(!client_data.debug_text)\n            return;\n        \n        if(this.main_camera != null) {\n            x = x + this.main_camera.x;\n            y = y + this.main_camera.y;\n        }\n        \n        if(this.should_cull(x, y, 100, 100))\n            return; \n        \n        this.main_canvas_context.save();\n        this.main_canvas_context.font = \"8px Times New Roman\";\n        this.main_canvas_context.fillStyle = color;\n        this.main_canvas_context.fillText(text, x, y);\n        this.main_canvas_context.restore();\n    };\n    \n    this.should_cull =  function(x, y, width, height) {\n            if(x > (this.main_canvas_context.width + width) || x < -width\n                || y > (this.main_canvas_context.height + height) || y < -height)\n                return true; \n            \n            return false;\n    };\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":4991}]],"length":4991}
{"contributors":[],"silentsave":false,"ts":1350765929946,"patch":[[{"diffs":[[0,"_text = "],[-1,"tru"],[1,"fals"],[0,"e;\n    c"]],"start1":582,"start2":582,"length1":19,"length2":20},{"diffs":[[0,"hapes = "],[-1,"tru"],[1,"fals"],[0,"e;\n    c"]],"start1":620,"start2":620,"length1":19,"length2":20}]],"length":4993,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350856368414,"patch":[[{"diffs":[[0,"          x = x "],[-1,"+"],[1,"-"],[0," this.main_camer"]],"start1":3166,"start2":3166,"length1":33,"length2":33},{"diffs":[[0,"          y = y "],[-1,"+"],[1,"-"],[0," this.main_camer"]],"start1":3206,"start2":3206,"length1":33,"length2":33}]],"length":4993,"saved":false}
{"ts":1350856384671,"patch":[[{"diffs":[[0,"          x = x "],[-1,"+"],[1,"-"],[0," this.main_camer"]],"start1":3707,"start2":3707,"length1":33,"length2":33},{"diffs":[[0,"          y = y "],[-1,"+"],[1,"-"],[0," this.main_camer"]],"start1":3747,"start2":3747,"length1":33,"length2":33}]],"length":4993,"saved":false}
{"ts":1350856499633,"patch":[[{"diffs":[[0,"          x = x "],[-1,"+"],[1,"-"],[0," this.main_camer"]],"start1":2635,"start2":2635,"length1":33,"length2":33},{"diffs":[[0,"          y = y "],[-1,"+"],[1,"-"],[0," this.main_camer"]],"start1":2675,"start2":2675,"length1":33,"length2":33},{"diffs":[[0,"  x = x "],[-1,"+"],[1,"-"],[0," this.ma"]],"start1":4271,"start2":4271,"length1":17,"length2":17},{"diffs":[[0,"  y = y "],[-1,"+"],[1,"-"],[0," this.ma"]],"start1":4311,"start2":4311,"length1":17,"length2":17}]],"length":4993,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351021807153,"patch":[[{"diffs":[[0,"bject;\n    \n"],[1,"    this.rendermodes = {\n        NORMAL: 0,\n        WIREFRAME: 1\n    };\n    \n"],[0,"    this.scr"]],"start1":198,"start2":198,"length1":24,"length2":101},{"diffs":[[0," null;\n    \n"],[1,"    client_data.draw_world = true;\n"],[0,"    client_d"]],"start1":626,"start2":626,"length1":24,"length2":59}]],"length":5105,"saved":false}
{"ts":1351021845792,"patch":[[{"diffs":[[0,"g_shapes');\n"],[1,"    client_data.gui.__renderer.add(client_data,'draw_world');\n"],[0,"    \n    cli"]],"start1":934,"start2":934,"length1":24,"length2":86}]],"length":5167,"saved":false}
{"ts":1351021905014,"patch":[[{"diffs":[[0,"       \n        "],[1,"if(!client_data.draw_world)\n            return;Array"],[0,"\n        this.ma"]],"start1":3530,"start2":3530,"length1":32,"length2":84}]],"length":5219,"saved":false}
{"ts":1351021911161,"patch":[[{"diffs":[[0,"urn;"],[-1,"Array"],[1,"\n            "],[0,"\n   "]],"start1":3589,"start2":3589,"length1":13,"length2":21}]],"length":5227,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351031456187,"patch":[[{"diffs":[[1,"function Renderer(canvas_id, client_object) \n{\n    this.main_canvas = document.getElementById(canvas_id);\n    this.main_canvas_context = this.main_canvas.getContext(\"2d\");\n    this.client = client_object;\n    \n    this.rendermodes = {\n        NORMAL: 0,\n        WIREFRAME: 1\n    };\n    \n    this.screen_width = this.main_canvas.width;\n    this.screen_height = this.main_canvas.height;\n    this.rendered_bb = {x:0, y:0, width:0, height: 0};\n    \n    this.background_color = \"black\";\n    \n    this.stats = {};\n    this.stats.buffer_blits = 0;\n    this.stats.buffers_created = 0;\n    this.stats.culled = 0;\n    this.main_camera = null;\n    \n    client_data.draw_world = true;\n    client_data.debug_text = false;\n    client_data.debug_shapes = false;\n    client_data.gui.__renderer = client_data.gui.addFolder(\"Rendering\");\n    client_data.gui.__renderer.add(client_data,'debug_text');\n    client_data.gui.__renderer.add(client_data,'debug_shapes');\n    client_data.gui.__renderer.add(client_data,'draw_world');\n    \n    client_data.gui.__renderer.add(this.stats, 'buffer_blits').listen();\n    client_data.gui.__renderer.add(this.stats, 'buffers_created').listen();\n    client_data.gui.__renderer.add(this.stats, 'culled').listen();\n    \n    this.draw_frame = function(delta) {};\n    \n    this.clear = function(only_dirty) \n    {\n        this.stats.buffer_blits = 0;\n        this.stats.culled =0;\n        if(only_dirty) {\n            this.main_canvas_context.fillRect(this.rendered_bb.x, this.rendered_bb.y, \n                  this.rendered_bb.width, this.rendered_bb.height);\n        } else {\n            this.main_canvas_context.save();\n            this.main_canvas_context.fillStyle = this.background_color;\n            this.main_canvas_context.fillRect(0,0, this.screen_width, this.screen_height);   \n            this.main_canvas_context.restore();\n        }\n    };\n    \n    this.create_canvas_buffer = function(image_url, callback, context) {\n            this.stats.buffers_created++;\n            var rend = this;\n            this.client.resources.get_image(image_url, function(image) {\n                var ccontext = rend.__create_context(image.width, image.height);\n                ccontext.drawImage(image, 0, 0);\n                callback.call(context, ccontext);\n            }, {});\n    };\n    \n    this.__create_context = function(width, height) {\n        var tmp_canvas = document.createElement(\"canvas\");\n        tmp_canvas.width = width;\n        tmp_canvas.height = height;\n        return tmp_canvas.getContext(\"2d\");\n    };\n    \n    this.__calc_redraw_bb = function(drawn_context, x, y) {\n    };\n    \n    this.draw_buffer = function(buffer, x, y, width, height) { \n        if(buffer == null || buffer.canvas == null) {\n            return;\n        }\n        \n        if(this.main_camera != null) {\n            x = x - this.main_camera.x;\n            y = y - this.main_camera.y;\n        }\n        \n        if(this.should_cull(x, y, width, height)) {\n            return; \n        }\n\n        this.main_canvas_context.drawImage(buffer.canvas, x, y);\n        this.stats.buffer_blits++;\n    };\n    \n    this.draw_buffer_section = function(buffer, srcx, srcy, srcwidth, srcheight, x, y, width, height) {\n        if(buffer == null || buffer.canvas == null) {\n            return;\n        }\n        \n        if(this.main_camera != null) {\n            x = x - this.main_camera.x;\n            y = y - this.main_camera.y;\n        }\n        \n        \n        if(this.should_cull(x, y, width, height)) {\n            return; \n        }\n        \n        if(!client_data.draw_world)\n            return;\n            \n        this.main_canvas_context.drawImage(buffer.canvas, srcx, srcy, srcwidth, srcheight, x, y, width, height);\n        this.stats.buffer_blits++;\n    }; \n    \n    this.draw_debug_box = function(x, y, width, height, color) {\n        if(!client_data.debug_shapes)\n            return;\n        \n        if(this.main_camera != null) {\n            x = x - this.main_camera.x;\n            y = y - this.main_camera.y;\n        }\n        if(this.should_cull(x, y, width, height))\n            return; \n        \n        this.main_canvas_context.save();\n        this.main_canvas_context.strokeStyle = color;    \n        this.main_canvas_context.strokeRect(x, y, width, height);\n        this.main_canvas_context.restore();\n    };    \n    \n    this.draw_debug_text = function(x, y, text, color) {\n        if(!client_data.debug_text)\n            return;\n        \n        if(this.main_camera != null) {\n            x = x - this.main_camera.x;\n            y = y - this.main_camera.y;\n        }\n        \n        if(this.should_cull(x, y, 100, 100))\n            return; \n        \n        this.main_canvas_context.save();\n        this.main_canvas_context.font = \"8px Times New Roman\";\n        this.main_canvas_context.fillStyle = color;\n        this.main_canvas_context.fillText(text, x, y);\n        this.main_canvas_context.restore();\n    };\n     \n    this.should_cull =  function(x, y, width, height) {\n            if(x  > (this.main_canvas_context.width + width) || x < -width\n                || y > (this.main_canvas_context.height + height) || y < -height)\n                return true; \n            \n            return false;\n    };\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":5229}]],"length":5229,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351031504633,"patch":[[{"diffs":[[0,"dth, height)) {\n"],[1,"            client_data.culled+=;\n"],[0,"            retu"]],"start1":2942,"start2":2942,"length1":32,"length2":66},{"diffs":[[0,"0, 100))"],[1," {"],[0,"\n       "]],"start1":4664,"start2":4664,"length1":16,"length2":18},{"diffs":[[0,")) {\n           "],[1,"\n         "],[1," "],[0," return; \n      "]],"start1":4670,"start2":4670,"length1":32,"length2":43},{"diffs":[[0,"       return; \n"],[1,"        }\n"],[0,"        \n       "]],"start1":4691,"start2":4691,"length1":32,"length2":42}]],"length":5286,"saved":false}
{"ts":1351031508662,"patch":[[{"diffs":[[0,".culled+"],[-1,"="],[1,"+"],[0,";\n      "]],"start1":2981,"start2":2981,"length1":17,"length2":17}]],"length":5286,"saved":false}
{"ts":1351031517570,"patch":[[{"diffs":[[0,"        "],[-1,"client_data"],[1,"this.stats"],[0,".culled+"]],"start1":2962,"start2":2962,"length1":27,"length2":26}]],"length":5285,"saved":false}
{"ts":1351031544700,"patch":[[{"diffs":[[0,"dth, height)) {\n"],[1,"            this.stats.culled++;\n"],[0,"            retu"]],"start1":3515,"start2":3515,"length1":32,"length2":65}]],"length":5318,"saved":false}
{"ts":1351031569376,"patch":[[{"diffs":[[0,"height))"],[1," {\n            this.stats.culled++;"],[0,"\n       "]],"start1":4136,"start2":4136,"length1":16,"length2":51},{"diffs":[[0,"eturn; \n        "],[1,"}"],[0,"\n        this.ma"]],"start1":4193,"start2":4193,"length1":32,"length2":33}]],"length":5354,"saved":false}
{"ts":1351031579444,"patch":[[{"diffs":[[0,")) {\n           "],[1,"this.culled++;"],[0,"\n           retu"]],"start1":4738,"start2":4738,"length1":32,"length2":46}]],"length":5368,"saved":false}
{"ts":1351031614756,"patch":[[{"diffs":[[0,"   this."],[1,"stats."],[0,"culled++"]],"start1":4751,"start2":4751,"length1":16,"length2":22}]],"length":5374,"saved":false}
{"ts":1351031652316,"patch":[[{"diffs":[[0,"s, 'culled')"],[-1,".listen()"],[0,";\n    \n    t"]],"start1":1206,"start2":1206,"length1":33,"length2":24}]],"length":5365,"saved":false}
{"ts":1351031660839,"patch":[[{"diffs":[[0,"_blits')"],[-1,".listen()"],[0,";\n    cl"]],"start1":1067,"start2":1067,"length1":25,"length2":16},{"diffs":[[0,"ed')"],[-1,".listen()"],[0,";\n  "]],"start1":1138,"start2":1138,"length1":17,"length2":8}]],"length":5347,"saved":false}
{"ts":1351031734190,"patch":[[{"diffs":[[0,"_blits')"],[1,".listen()"],[0,";\n    cl"]],"start1":1067,"start2":1067,"length1":16,"length2":25},{"diffs":[[0,"rs_created')"],[1,".listen()"],[0,";\n    client"]],"start1":1139,"start2":1139,"length1":24,"length2":33},{"diffs":[[0,"culled')"],[1,".listen()"],[0,";\n    \n "]],"start1":1210,"start2":1210,"length1":16,"length2":25}]],"length":5374,"saved":false}
{"ts":1351031846234,"patch":[[{"diffs":[[0,"x < "],[-1,"-"],[1,"(0 - "],[0,"width"],[1,")"],[0,"\n   "]],"start1":5202,"start2":5202,"length1":14,"length2":19},{"diffs":[[0,"y < "],[-1,"-"],[1,"(0 - "],[0,"height)"],[1,")"],[0,"\n   "]],"start1":5287,"start2":5287,"length1":16,"length2":21}]],"length":5384,"saved":false}
